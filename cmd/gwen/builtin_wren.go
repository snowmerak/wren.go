// Code generated by wrengen. DO NOT EDIT.

package main

import (
	wrengo "github.com/snowmerak/wren.go"
	"github.com/snowmerak/wren.go/builtin"
)

func init() {
	// Register async module
	wrengo.RegisterForeignMethod("async", "Async", true, "sleep(_)", wrengoForeignMethod_0)
	wrengo.RegisterForeignMethod("async", "Async", true, "delay(_)", wrengoForeignMethod_1)
	wrengo.RegisterForeignMethod("async", "Async", true, "timer(_,_)", wrengoForeignMethod_2)

	// Register math module
	wrengo.RegisterForeignMethod("math", "Math", true, "sqrt(_)", wrengoForeignMethod_3)
	wrengo.RegisterForeignMethod("math", "Math", true, "pow(_,_)", wrengoForeignMethod_4)
	wrengo.RegisterForeignMethod("math", "Math", true, "sin(_)", wrengoForeignMethod_5)
	wrengo.RegisterForeignMethod("math", "Math", true, "cos(_)", wrengoForeignMethod_6)
	wrengo.RegisterForeignMethod("math", "Math", true, "abs(_)", wrengoForeignMethod_7)
	wrengo.RegisterForeignMethod("math", "Math", true, "max(_,_)", wrengoForeignMethod_8)
	wrengo.RegisterForeignMethod("math", "Math", true, "min(_,_)", wrengoForeignMethod_9)
	wrengo.RegisterForeignMethod("math", "Math", true, "pi", wrengoForeignMethod_10)

	// Register strconv module
	wrengo.RegisterForeignMethod("strconv", "StrConv", true, "atoi(_)", wrengoForeignMethod_11)
	wrengo.RegisterForeignMethod("strconv", "StrConv", true, "parseFloat(_)", wrengoForeignMethod_12)
	wrengo.RegisterForeignMethod("strconv", "StrConv", true, "itoa(_)", wrengoForeignMethod_13)
	wrengo.RegisterForeignMethod("strconv", "StrConv", true, "formatFloat(_,_)", wrengoForeignMethod_14)
	wrengo.RegisterForeignMethod("strconv", "StrConv", true, "parseBool(_)", wrengoForeignMethod_15)
	wrengo.RegisterForeignMethod("strconv", "StrConv", true, "formatBool(_)", wrengoForeignMethod_16)

	// Register strings module
	wrengo.RegisterForeignMethod("strings", "Strings", true, "upper(_)", wrengoForeignMethod_17)
	wrengo.RegisterForeignMethod("strings", "Strings", true, "lower(_)", wrengoForeignMethod_18)
	wrengo.RegisterForeignMethod("strings", "Strings", true, "trim(_)", wrengoForeignMethod_19)
	wrengo.RegisterForeignMethod("strings", "Strings", true, "contains(_,_)", wrengoForeignMethod_20)
	wrengo.RegisterForeignMethod("strings", "Strings", true, "split(_,_)", wrengoForeignMethod_21)
	wrengo.RegisterForeignMethod("strings", "Strings", true, "join(_,_)", wrengoForeignMethod_22)

}

// Async module methods
//export wrengoForeignMethod_0
func wrengoForeignMethod_0(vm *wrengo.WrenVM) {
	async := &builtin.Async{}
	async.Sleep(vm)
}

//export wrengoForeignMethod_1
func wrengoForeignMethod_1(vm *wrengo.WrenVM) {
	async := &builtin.Async{}
	async.Delay(vm)
}

//export wrengoForeignMethod_2
func wrengoForeignMethod_2(vm *wrengo.WrenVM) {
	async := &builtin.Async{}
	async.Timer(vm)
}

// Math module methods
//export wrengoForeignMethod_3
func wrengoForeignMethod_3(vm *wrengo.WrenVM) {
	math := &builtin.Math{}
	math.Sqrt(vm)
}

//export wrengoForeignMethod_4
func wrengoForeignMethod_4(vm *wrengo.WrenVM) {
	math := &builtin.Math{}
	math.Pow(vm)
}

//export wrengoForeignMethod_5
func wrengoForeignMethod_5(vm *wrengo.WrenVM) {
	math := &builtin.Math{}
	math.Sin(vm)
}

//export wrengoForeignMethod_6
func wrengoForeignMethod_6(vm *wrengo.WrenVM) {
	math := &builtin.Math{}
	math.Cos(vm)
}

//export wrengoForeignMethod_7
func wrengoForeignMethod_7(vm *wrengo.WrenVM) {
	math := &builtin.Math{}
	math.Abs(vm)
}

//export wrengoForeignMethod_8
func wrengoForeignMethod_8(vm *wrengo.WrenVM) {
	math := &builtin.Math{}
	math.Max(vm)
}

//export wrengoForeignMethod_9
func wrengoForeignMethod_9(vm *wrengo.WrenVM) {
	math := &builtin.Math{}
	math.Min(vm)
}

//export wrengoForeignMethod_10
func wrengoForeignMethod_10(vm *wrengo.WrenVM) {
	math := &builtin.Math{}
	math.Pi(vm)
}

// StrConv module methods
//export wrengoForeignMethod_11
func wrengoForeignMethod_11(vm *wrengo.WrenVM) {
	strconv := &builtin.StrConv{}
	strconv.Atoi(vm)
}

//export wrengoForeignMethod_12
func wrengoForeignMethod_12(vm *wrengo.WrenVM) {
	strconv := &builtin.StrConv{}
	strconv.ParseFloat(vm)
}

//export wrengoForeignMethod_13
func wrengoForeignMethod_13(vm *wrengo.WrenVM) {
	strconv := &builtin.StrConv{}
	strconv.Itoa(vm)
}

//export wrengoForeignMethod_14
func wrengoForeignMethod_14(vm *wrengo.WrenVM) {
	strconv := &builtin.StrConv{}
	strconv.FormatFloat(vm)
}

//export wrengoForeignMethod_15
func wrengoForeignMethod_15(vm *wrengo.WrenVM) {
	strconv := &builtin.StrConv{}
	strconv.ParseBool(vm)
}

//export wrengoForeignMethod_16
func wrengoForeignMethod_16(vm *wrengo.WrenVM) {
	strconv := &builtin.StrConv{}
	strconv.FormatBool(vm)
}

// Strings module methods
//export wrengoForeignMethod_17
func wrengoForeignMethod_17(vm *wrengo.WrenVM) {
	strings := &builtin.Strings{}
	strings.ToUpper(vm)
}

//export wrengoForeignMethod_18
func wrengoForeignMethod_18(vm *wrengo.WrenVM) {
	strings := &builtin.Strings{}
	strings.ToLower(vm)
}

//export wrengoForeignMethod_19
func wrengoForeignMethod_19(vm *wrengo.WrenVM) {
	strings := &builtin.Strings{}
	strings.Trim(vm)
}

//export wrengoForeignMethod_20
func wrengoForeignMethod_20(vm *wrengo.WrenVM) {
	strings := &builtin.Strings{}
	strings.Contains(vm)
}

//export wrengoForeignMethod_21
func wrengoForeignMethod_21(vm *wrengo.WrenVM) {
	strings := &builtin.Strings{}
	strings.Split(vm)
}

//export wrengoForeignMethod_22
func wrengoForeignMethod_22(vm *wrengo.WrenVM) {
	strings := &builtin.Strings{}
	strings.Join(vm)
}

