// Code generated by wrengen. DO NOT EDIT.

package builtin

import wrengo "github.com/snowmerak/wren.go"

func init() {
	RegisterWrenBindings()
}

func RegisterWrenBindings() {
	// Async.sleep(_)
	wrengo.RegisterForeignMethod("async", "Async", true, "sleep(_)(_)", func(vm *wrengo.WrenVM) {
		// TODO: Extract vm (*wrengo.WrenVM) from slot 1
		receiver := &Async{}
		result := receiver.Sleep(vm)
		if result != nil {
			vm.SetSlotString(0, result.Error())
			vm.AbortFiber(0)
			return
		}
	})

	// Async.delay(_)
	wrengo.RegisterForeignMethod("async", "Async", true, "delay(_)(_)", func(vm *wrengo.WrenVM) {
		// TODO: Extract vm (*wrengo.WrenVM) from slot 1
		receiver := &Async{}
		result := receiver.Delay(vm)
		if result != nil {
			vm.SetSlotString(0, result.Error())
			vm.AbortFiber(0)
			return
		}
	})

	// Async.timer(_,_)
	wrengo.RegisterForeignMethod("async", "Async", true, "timer(_,_)(_)", func(vm *wrengo.WrenVM) {
		// TODO: Extract vm (*wrengo.WrenVM) from slot 1
		receiver := &Async{}
		result := receiver.Timer(vm)
		if result != nil {
			vm.SetSlotString(0, result.Error())
			vm.AbortFiber(0)
			return
		}
	})

}
