// Code generated by wrengen. DO NOT EDIT.

package builtin

import wrengo "github.com/snowmerak/wren.go"

func init() {
	RegisterWrenBindings()
}

func RegisterWrenBindings() {
	// AsyncBuiltin.sleep(_)
	wrengo.RegisterForeignMethod("main", "AsyncBuiltin", true, "sleep(_)", func(vm *wrengo.WrenVM) {
		receiver := &Async{}
		result := receiver.Sleep(vm)
		if result != nil {
			vm.SetSlotString(0, result.Error())
			vm.AbortFiber(0)
			return
		}
	})

	// AsyncBuiltin.delay(_)
	wrengo.RegisterForeignMethod("main", "AsyncBuiltin", true, "delay(_)", func(vm *wrengo.WrenVM) {
		receiver := &Async{}
		result := receiver.Delay(vm)
		if result != nil {
			vm.SetSlotString(0, result.Error())
			vm.AbortFiber(0)
			return
		}
	})

	// AsyncBuiltin.timer(_,_)
	wrengo.RegisterForeignMethod("main", "AsyncBuiltin", true, "timer(_,_)", func(vm *wrengo.WrenVM) {
		receiver := &Async{}
		result := receiver.Timer(vm)
		if result != nil {
			vm.SetSlotString(0, result.Error())
			vm.AbortFiber(0)
			return
		}
	})

}
